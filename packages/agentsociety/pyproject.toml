[build-system]
requires = ["hatchling", "requests>=2", "cibuildwheel[uv]>=3.0.0"]
build-backend = "hatchling.build"

[project]
name = "agentsociety"
version = "1.5.0a7" # change it for each release
description = "LLM-based city environment agent building library"
authors = [
    { name = "Yuwei Yan", email = "pinkgranite86@gmail.com" },
    { name = "Junbo Yan", email = "yanjb20thu@gmail.com" },
    { name = "Jun Zhang", email = "zhangjun990222@gmail.com" },
    { name = "Zhiheng Zheng", email = "zhengzh20@gmail.com" },
]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
]
dependencies = [
    "aiodocker>=0.24.0",
    "aiosqlite>=0.21.0",
    "asyncpg>=0.30.0",
    "boto3>=1.37",
    "casdoor>=1.29.0",
    "click>=8.0.0",
    "faiss-cpu>=1.9.0.post1",
    "fastapi>=0.103.1",
    "geojson>=3.1.0",
    "grpcio>=1.71.0,<2.0.0",
    "kubernetes-asyncio>=32.3.0",
    "numpy>=1.20.0,<2.0.0",
    "openai>=1.58.1",
    "protobuf<=4.24.0,<5.0.0",
    "psutil>=5.9.0",
    "pycityproto>=2.2.7",
    "pydantic>=2.10.4",
    "pyproj>=3.6.0",
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.20",
    "PyYAML>=6.0.2",
    "ray[default]>=2.40.0",
    "requests>=2.32.3",
    "Shapely>=2.0.6",
    "sqlalchemy[asyncio]>=2.0.20",
    "uvicorn>=0.23.2",
    "qdrant-client[fastembed]>=1.12.1",
    "json-repair>=0.46.2",
]


[project.urls]
Homepage = "https://github.com/tsinghua-fib-lab/agentsociety"
Repository = "https://github.com/tsinghua-fib-lab/agentsociety.git"
Issues = "https://github.com/tsinghua-fib-lab/agentsociety/issues"


[project.scripts]
agentsociety = "agentsociety.cli.cli:cli"
agentsociety-sim = "agentsociety.cli.sim:agentsociety_sim"

[tool.hatch.build.targets.wheel]
packages = ["agentsociety"]
# force include the agentsociety-sim script
force-include = { "agentsociety/agentsociety-sim" = "agentsociety/agentsociety-sim" }

[tool.hatch.build.hooks.custom]
path = "build_hook.py"

[tool.cibuildwheel]
build = ["cp3*manylinux_x86_64", "cp3*macosx_arm64"]
skip = ["cp38-*", "cp39-*", "cp310-*"]
build-frontend = "build[uv]"

[tool.cibuildwheel.linux]
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
repair-wheel-command = "delocate-wheel -w {dest_dir} {wheel}"
